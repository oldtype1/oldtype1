<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

<resultMap type="mvo" id="memberResult">
	<result property="memberId" column="member_id"/>
	<result property="memberName" column="member_name"/>
	<result property="memberTel" column="member_tel"/>
	<result property="memberInfo" column="member_info"/>
	<result property="memberPass" column="member_pass"/>
	<result property="memberAnswerType" column="member_answer_type"/>
	<result property="memberPassAnswer" column="member_pass_answer"/>
	<result property="memberBank" column="member_bank"/>
	<result property="memberBankAcount" column="member_pass_answer"/>
</resultMap>

	<sql id="selectMember">
		select member_id, member_name, member_tel, member_info, member_pass, member_answer_type,  
		member_pass_answer, member_bank, member_bank_acount from member
	</sql>
	
	<select id="login" parameterType="mvo" resultType="mvo" resultMap="memberResult">
		<include refid="selectMember" />
		where member_id=#{memberId} and member_pass=#{memberPass}
	</select>
	
	  <select id="findMemberById" resultType="mvo" parameterType="String" resultMap="memberResult">
      <include refid="selectMember" /> where member_id=#{value}
   </select> 
   <update id="updateMemberInfo" parameterType="mvo">
   update member set member_name=#{memberName}, member_tel=#{memberTel}, 
   member_info=#{memberInfo}, member_pass=#{memberPass}, 
   member_answer_type=#{memberAnswerType}, member_pass_answer=#{memberPassAnswer}
   member_bank=#{memberBank}, member_bank_acount=#{memberBankAcount}
   where member_id=#{memberId}
   </update>
   
	<insert id="register" parameterType="mvo">
		insert into MEMBER
		(member_id, member_name, member_tel, member_info, member_pass, member_answer_type, member_pass_answer, member_bank, member_bank_acount) 
		values(#{memberId}, #{memberName}, #{memberTel}, #{memberInfo}, #{memberPass},
		#{memberAnswerType},#{memberPassAnswer},#{memberBank},#{memberBankAcount})
	</insert>
	<delete id="memberSecession" parameterType="String">
	delete from member where member_id=#{value}
	</delete>
	<select id="memberPasswordcheck" parameterType="String" resultType="String">
	select member_pass from member where member_id=#{value}
	</select>
	<select id="memberIdCheck" parameterType="String" resultType="String">
	select member_id from member where member_id=#{value}
	</select>
	
	<select id="selectPasswordByAnswer" resultMap="memberResult" resultType="mvo" parameterType="mvo">
		<include refid="selectMember" /> where member_answer_type=#{memberAnswerType} and 
		member_pass_answer=#{memberPassAnswer} and member_id=#{memberId}
	</select>
	
	<!-- <select id="getAddressKind" resultType="string">
		select distinct(address) from member
	</select>
	<select id="findByAddress" resultType="mvo">
		<include refid="selectMember" />
		where address=#{value}
	</select>
	<select id="findMemberById" resultType="mvo">
		<include refid="selectMember" />
		where id=#{value}
	</select>
	<insert id="registerMember" parameterType="mvo">
		insert into member(id,password,name,address)
		values(#{id},#{password},#{name},#{address})
	</insert>
	<select id="idcheck" resultType="int">
		select count(*) from member where id=#{value}
	</select>
	<update id="updateMember" parameterType="mvo">
		update member set password=#{password},name=#{name},address=#{address}
		where id=#{id}
	</update> -->
</mapper>
 
 
 
 
 
 
 
 
 
















